{"ast":null,"code":"const {\n  extend,\n  str\n} = require('utilise/pure'),\n      browsers = require('./browsers.json'),\n      err = require('utilise/err')('[popper][saucelabs]'),\n      log = require('utilise/log')('[popper][saucelabs]');\n\nmodule.exports = {\n  browsers,\n  connect,\n  status,\n  parse\n};\n\nfunction connect(wd) {\n  const env = process.env,\n        key = env.SAUCE_ACCESS_KEY,\n        user = env.SAUCE_USERNAME,\n        host = 'ondemand.saucelabs.com';\n  return !user || !key ? (err('Please provide your SauceLabs Credentials'), false) : wd.remote(host, 80, user, key);\n}\n\nfunction status(browser, platform) {\n  browser.vm.sauceJobStatus(browser.passed, e => {\n    e ? err(e) : log('status updated', platform.uid.bold, str(browser.passed)[browser.passed ? 'green' : 'red'], str(browser.build).grey);\n    browser.vm.quit();\n  });\n}\n\nfunction parse(opts) {\n  return extend(opts)({\n    'tunnel-identifier': process.env.TRAVIS_JOB_NUMBER,\n    build: process.env.TRAVIS_BUILD_NUMBER || ~~(Math.random() * 100000000),\n    username: process.env.SAUCE_USERNAME,\n    accessKey: process.env.SAUCE_ACCESS_KEY\n  });\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/mernlearning/express/reactapp/node_modules/popper/farms/saucelabs/index.js"],"names":["extend","str","require","browsers","err","log","module","exports","connect","status","parse","wd","env","process","key","SAUCE_ACCESS_KEY","user","SAUCE_USERNAME","host","remote","browser","platform","vm","sauceJobStatus","passed","e","uid","bold","build","grey","quit","opts","TRAVIS_JOB_NUMBER","TRAVIS_BUILD_NUMBER","Math","random","username","accessKey"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAkBC,OAAO,CAAC,cAAD,CAA/B;AAAA,MACMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CADxB;AAAA,MAEME,GAAG,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuB,qBAAvB,CAFZ;AAAA,MAGMG,GAAG,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuB,qBAAvB,CAHZ;;AAKAI,MAAM,CAACC,OAAP,GAAiB;AAAEJ,EAAAA,QAAF;AAAYK,EAAAA,OAAZ;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA;AAA7B,CAAjB;;AAEA,SAASF,OAAT,CAAiBG,EAAjB,EAAqB;AACnB,QAAMC,GAAG,GAAIC,OAAO,CAACD,GAArB;AAAA,QACME,GAAG,GAAIF,GAAG,CAACG,gBADjB;AAAA,QAEMC,IAAI,GAAGJ,GAAG,CAACK,cAFjB;AAAA,QAGMC,IAAI,GAAG,wBAHb;AAKA,SAAO,CAACF,IAAD,IAAS,CAACF,GAAV,IACCV,GAAG,CAAC,2CAAD,CAAH,EAAkD,KADnD,IAEAO,EAAE,CAACQ,MAAH,CAAUD,IAAV,EAAgB,EAAhB,EAAoBF,IAApB,EAA0BF,GAA1B,CAFP;AAGD;;AAED,SAASL,MAAT,CAAgBW,OAAhB,EAAyBC,QAAzB,EAAmC;AACjCD,EAAAA,OAAO,CAACE,EAAR,CACGC,cADH,CACkBH,OAAO,CAACI,MAD1B,EACkCC,CAAC,IAAI;AACnCA,IAAAA,CAAC,GAAGrB,GAAG,CAACqB,CAAD,CAAN,GAAYpB,GAAG,CACd,gBADc,EAEdgB,QAAQ,CAACK,GAAT,CAAaC,IAFC,EAGd1B,GAAG,CAACmB,OAAO,CAACI,MAAT,CAAH,CAAoBJ,OAAO,CAACI,MAAR,GAAiB,OAAjB,GAA2B,KAA/C,CAHc,EAIdvB,GAAG,CAACmB,OAAO,CAACQ,KAAT,CAAH,CAAmBC,IAJL,CAAhB;AAMAT,IAAAA,OAAO,CAACE,EAAR,CAAWQ,IAAX;AACD,GATH;AAUD;;AAED,SAASpB,KAAT,CAAeqB,IAAf,EAAqB;AACnB,SAAO/B,MAAM,CAAC+B,IAAD,CAAN,CAAa;AAClB,yBAAqBlB,OAAO,CAACD,GAAR,CAAYoB,iBADf;AAElBJ,IAAAA,KAAK,EAAEf,OAAO,CAACD,GAAR,CAAYqB,mBAAZ,IAAmC,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAc,SAAhB,CAFzB;AAGlBC,IAAAA,QAAQ,EAAEvB,OAAO,CAACD,GAAR,CAAYK,cAHJ;AAIlBoB,IAAAA,SAAS,EAAExB,OAAO,CAACD,GAAR,CAAYG;AAJL,GAAb,CAAP;AAMD","sourcesContent":["const { extend, str } = require('utilise/pure')\r\n    , browsers = require('./browsers.json')\r\n    , err = require('utilise/err')('[popper][saucelabs]')\r\n    , log = require('utilise/log')('[popper][saucelabs]')\r\n\r\nmodule.exports = { browsers, connect, status, parse }\r\n\r\nfunction connect(wd) {\r\n  const env  = process.env\r\n      , key  = env.SAUCE_ACCESS_KEY\r\n      , user = env.SAUCE_USERNAME\r\n      , host = 'ondemand.saucelabs.com'\r\n\r\n  return !user || !key \r\n       ? (err('Please provide your SauceLabs Credentials'), false)\r\n       : wd.remote(host, 80, user, key)\r\n}\r\n\r\nfunction status(browser, platform) {\r\n  browser.vm\r\n    .sauceJobStatus(browser.passed, e => {\r\n      e ? err(e) : log(\r\n        'status updated'\r\n      , platform.uid.bold\r\n      , str(browser.passed)[browser.passed ? 'green' : 'red']\r\n      , str(browser.build).grey\r\n      )\r\n      browser.vm.quit()\r\n    })\r\n}\r\n\r\nfunction parse(opts) {\r\n  return extend(opts)({\r\n    'tunnel-identifier': process.env.TRAVIS_JOB_NUMBER\r\n  , build: process.env.TRAVIS_BUILD_NUMBER || ~~(Math.random()*100000000)\r\n  , username: process.env.SAUCE_USERNAME\r\n  , accessKey: process.env.SAUCE_ACCESS_KEY\r\n  })\r\n}"]},"metadata":{},"sourceType":"script"}